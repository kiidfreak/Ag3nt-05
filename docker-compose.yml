version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: agentlabs
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase (for development)
  supabase:
    image: supabase/postgres:15.1.0.117
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - supabase_data:/var/lib/postgresql/data

  # Agent Gateway (Backend)
  gateway:
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/agentlabs
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret
      - SOLANA_RPC_URL=https://api.devnet.solana.com
      - CORAL_API_URL=https://api.coralprotocol.org
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    # Temporarily remove volume mount to test
    # volumes:
    #   - ./apps/gateway:/app
    #   - /app/node_modules
    command: npm run dev

  # Agent Studio (Frontend)
  studio:
    build:
      context: ./apps/studio
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:3001
      - VITE_SOLANA_RPC=https://api.devnet.solana.com
      - VITE_CROSSMINT_API=https://api.crossmint.com
    volumes:
      - ./apps/studio:/app
      - /app/node_modules
    command: npm run dev

  # Agent Registry (Frontend)
  registry:
    build:
      context: ./apps/registry
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - VITE_API_URL=http://localhost:3001
      - VITE_SOLANA_RPC=https://api.devnet.solana.com
    volumes:
      - ./apps/registry:/app
      - /app/node_modules
    command: npm run dev

  # Dashboard (Frontend)
  dashboard:
    build:
      context: ./apps/dashboard
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    environment:
      - VITE_API_URL=http://localhost:3001
      - VITE_SOLANA_RPC=https://api.devnet.solana.com
    volumes:
      - ./apps/dashboard:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  supabase_data:

networks:
  default:
    name: agent-labs-network
